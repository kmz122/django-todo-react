{"version":3,"sources":["components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["CustomModal","props","handleChange","e","target","name","value","type","checked","activeItem","state","setState","this","toggle","onSave","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","title","onChange","placeholder","description","check","completed","ModalFooter","Button","color","onClick","Component","App","refreshList","axios","get","then","res","todoList","data","catch","err","console","log","displayCompleted","status","viewCompleted","renderTabList","className","renderItems","filter","item","map","editItem","handleDelete","id","modal","handleSubmit","put","post","delete","createItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.150d5f0f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n  handleChange = e => {\n    let { name, value } = e.target;\n    if (e.target.type === \"checkbox\") {\n      value = e.target.checked;\n    }\n    const activeItem = { ...this.state.activeItem, [name]: value };\n    this.setState({ activeItem });\n  };\n  render() {\n    const { toggle, onSave } = this.props;\n    return (\n      <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Todo Item </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                value={this.state.activeItem.title}\n                onChange={this.handleChange}\n                placeholder=\"Enter Todo Title\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"description\">Description</Label>\n              <Input\n                type=\"text\"\n                name=\"description\"\n                value={this.state.activeItem.description}\n                onChange={this.handleChange}\n                placeholder=\"Enter Todo description\"\n              />\n            </FormGroup>\n            <FormGroup check>\n              <Label for=\"completed\">\n                <Input\n                  type=\"checkbox\"\n                  name=\"completed\"\n                  checked={this.state.activeItem.completed}\n                  onChange={this.handleChange}\n                />\n                Completed\n              </Label>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  refreshList = () => {\n    axios\n      .get(\"/api/todos/\")\n      .then(res => this.setState({ todoList: res.data }))\n      .catch(err => console.log(err));\n  };\n  displayCompleted = status => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n    return this.setState({ viewCompleted: false });\n  };\n  renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={() => this.displayCompleted(true)}\n          className={this.state.viewCompleted ? \"active\" : \"\"}\n        >\n          complete\n        </span>\n        <span\n          onClick={() => this.displayCompleted(false)}\n          className={this.state.viewCompleted ? \"\" : \"active\"}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      item => item.completed === viewCompleted\n    );\n    return newItems.map(item => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            onClick={() => this.editItem(item)}\n            className=\"btn btn-secondary mr-2\"\n          >\n            {\" \"}\n            Edit{\" \"}\n          </button>\n          <button\n            onClick={() => this.handleDelete(item)}\n            className=\"btn btn-danger\"\n          >\n            Delete{\" \"}\n          </button>\n        </span>\n      </li>\n    ));\n  };\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  handleSubmit = item => {\n    this.toggle();\n    if (item.id) {\n      axios\n        .put(`/api/todos/${item.id}/`, item)\n        .then(res => this.refreshList());\n      return;\n    }\n    axios\n      .post(\"/api/todos/\", item)\n      .then(res => this.refreshList());\n  };\n  handleDelete = item => {\n    axios\n      .delete(`/api/todos/${item.id}/`)\n      .then(res => this.refreshList());\n  };\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  editItem = item => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n  render() {\n    return (\n      <main className=\"content\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row \">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button onClick={this.createItem} className=\"btn btn-primary\">\n                  Add task\n                </button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {this.state.modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          />\n        ) : null}\n      </main>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n// frontend/src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';       // add this\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n*/\n\n// /* \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';       // add this\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(<App />, \n//   document.getElementById('root'));\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// */"],"sourceRoot":""}